<project name="Inter-Platform Mobility" default="compile" basedir=".">
  <!-- set global properties for this build -->
  <property name="src" value="src"/>
  <property name="build" value="classes"/>
  <property name="doc" value="doc"/>
  <property name="dist" value="../.."/>
  <property name="lib" value="lib"/>
  <property name="packageDir" value="benchmark/roundTripTime"/>
  <property name="libJADEDir" value="../../lib"/>
  <property name="release" value="1.0"/>
  
  <!-- classpaths and filesets -->
  <patternset id="src.non.test" >
    <include name="jade/**/*.java"/>
    <include name="edu/**/*.java"/>
    <exclude name="test/**/*.java"/>
  </patternset>
	
  <patternset id="src.all" >
    <include name="jade/**/*.java"/>
    <include name="edu/**/*.java"/>
    <include name="test/**/*.java"/>
  </patternset>
	
  <!-- targets -->
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the directories structure used to store files -->
    <mkdir dir="${build}"/>
    <mkdir dir="${lib}"/>
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${src}" destdir="${build}" classpath="${classpath}" nowarn="off" optimize="on" deprecation="on">
      <patternset refid="src.non.test"/>
      <classpath>
        <pathelement path="${libJADEDir}/jade.jar"/>
        <pathelement path="${libJADEDir}/commons-codec/commons-codec-1.3.jar"/>
      </classpath>
    </javac>
  </target>
  
  <target name="lib" depends="compile">
    <jar jarfile="${lib}/migration.jar">
      <fileset dir="${build}"/>
    </jar>
  </target>

  <!-- Make distribution zip file and put in ${dist} -->
  <target name="dist" depends="init, clean">
    <jar jarfile="${dist}/migrationAdd-on-${release}.zip">
      <fileset dir="${dist}" includes="add-ons/migration/${src}/**"/>
      <fileset dir="${dist}" includes="add-ons/migration/*"/>
    </jar>
  </target>

  <!-- delete ${build} and ${lib} directories -->
  <target name="clean" description="clean up">
    <!-- Delete the ${build} directory tree -->
    <delete includeEmptyDirs="true">
      <fileset dir="${build}"/>
    </delete>
  </target>

  <target name="all" depends="init, compile, dist"/>

</project>
