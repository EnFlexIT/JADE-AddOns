<!--

   build.xml

   for JADE Security Plug-in 

   to be used with 'ant':
   http://jakarta.apache.org/ant/

-->
<project name="Benchmark" default="examples" basedir=".">
  <!-- set global properties for this build -->
  <property name="src" value="src"/>
  <property name="classes" value="classes"/>
  <property name="lib" value="lib"/>
  <property name="doc" value="doc"/>
  <property name="runExamples" value="runExamples"/>
  <property name="bin" value="bin"/>
  <property name="jaderoot" value="../../../jade"/>
  <property name="conf" value="conf"/>
  <property name="packageDir" value="jade/security/impl"/>
  <property name="libJADEDir" value="../../lib"/>
  <property name="classpath" value="../..;../../classes;${libJADEDir}/jade.jar;${libJADEDir}/jadeTools.jar;${libJADEDir}/iiop.jar;${libJADEDir}/Base64.jar;"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the directories structure used to store files -->
    <mkdir dir="${classes}"/>
  </target>

  <!-- Compile the javadoc code from ${src} into ${doc} -->
  <target name="doc" depends="init" description="Make javadoc from source code.">
    <echo>--- Creating javadoc files ---</echo>
    <mkdir dir="${doc}/api"/>
    <javadoc sourcepath="${src}/${packageDir}" sourcefiles="${src}/${packageDir}/*.java,${src}/${packageDir}/DES/*.java" destdir="${doc}/api" author="true" windowtitle="JADE Security Plug-in"/>
  </target>


  <!-- Compile jade.security.impl -->
  <target name="jadeS" depends="init" description="Compile JADE-S.">
  <echo>--- Compiling jade.security.impl ---</echo>
    <javac srcdir="${src}" destdir="${classes}" classpath="${classpath}" optimize="${optimised-build}"
           includes="jade/security/impl/**"
           excludes="examples/**"
    />
  </target>

  <!-- Compile examples  -->
  <target name="examples" depends="init" description="Compile the JADE-S examples.">
    <echo>--- Compiling JADE-S examples ---</echo>
    <javac srcdir="${src}" destdir="${classes}" classpath="${classpath}" optimize="${optimised-build}"
           includes="examples/**"
    />
  </target>

  <target name="compile" depends="init,jadeS,examples" description="Compile JADE-S and the examples." />


  <!-- Make the jar file in ${lib} -->
  <target name="lib" depends="init" description="Create 'jadeS.jar' in the lib/ directory. ">
    <echo>--- Creating jadeS.jar ---</echo>
    <mkdir dir="${lib}"/>
    <jar destfile="${lib}/jadeS.jar" 
                 basedir="${classes}" 
		 includes="jade/security/impl/**" 
		 excludes=""/>
  </target>

  <!-- Create the zip file -->
  <target name="zip" depends="init">
    <zip zipfile="./jadesecurity.zip" 
         basedir="../../../" 
	 includes="jade/add-ons/security/*, jade/add-ons/security/${lib}/**, jade/add-ons/security/${bin}/**, jade/add-ons/security/src-3rd/**,
                  jade/add-ons/security/${runExamples}/myfirst/**,
                  jade/add-ons/security/${src}/examples/myfirst/**"
	 excludes="jade/add-ons/security/*.zip,jade/add-ons/security/${doc}/api/**"/>
  </target>

  <!-- Clean all the class files created -->
  <target name="clean-classes" description="clean up the .class files.">
    <!-- Delete the ${classes} directory tree -->
    <echo>--- Delete the .class files ---</echo>
    <delete includeEmptyDirs="true">
      <fileset dir="${classes}" excludes="**/*.mf" />
    </delete>
  </target>

  <!-- Clean all the txt files generated by JADE in the examples -->
  <target name="clean-txt" description="Clean all the txt files generated by JADE in the examples.">
    <echo>--- Delete the APDescription.txt and MPTs-*.txt files in the runExamples dir ---</echo>
    <delete includeEmptyDirs="true">
      <fileset dir="${runExamples}" includes="**/APDescription.txt,**/MTPs-*.txt"/>
    </delete>
  </target>

  <target name="clean" depends="clean-txt,clean-classes" description="Clean up both classes and txt files. "/>



  <!-- Make distribution zip file and put in ${dist} -->
  <target name="dist" depends="init,lib,zip">
  <echo>--- 'jadesecurity.zip' distribution file created.---</echo>
  </target>


  <target name="all" depends="init,doc,compile,lib,dist"/>


</project>