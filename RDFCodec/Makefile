# Makefile for RDF Codec

JADELIB     	=   	../../../lib/jade.jar
LIBDIR      	=   	../lib
LIBNAME     	=   	rdf.jar
PARSERSLIB  	=   	$(LIBDIR)/sax2.jar:$(LIBDIR)/rdf-api-2001-01-19.jar
CLSDIR      	=	classes
SRCDIR      	=   	src
EXAMPLESDIR 	= 	examples
BATCH_MAKE  	=	makeRDF.bat
BATCH_CLEAN 	=	makeclean.bat
BATCH_DIST  	=	makedist.bat
BATCH_LIB   	=   	makelib.bat
BATCH_EXAMPLES  =   	makeexamples.bat

AR 	    	= 	jar
ARFLAGS     	= 	cvf
JC 	    	= 	javac
JFLAGS 	    	= 	-deprecation -O -d ../$(CLSDIR) -classpath .:$(JADELIB):$(PARSERSLIB)
EXAMPLEJFLAGS	= 	-deprecation -O -d $(CLSDIR) -classpath .:../../lib/jade.jar:lib/sax2.jar:lib/rdf-api-2001-01-19.jar:$(CLSDIR)

SOURCES	    	=	it/unipr/aot/rdf/RDFCodec.java \
			it/unipr/aot/rdf/RDFFrameConsumer.java	
EXAMPLESOURCES 	= 	examples/rdfcontent/Sender.java\
		 	examples/rdfcontent/Receiver.java

# The following targets are not file names 
.PHONY: all batch lib clean dist examples

all: $(CLSDIR)
	@echo Building RDF Codec sources
	cd $(SRCDIR); \
	$(JC) $(JFLAGS) $(SOURCES);\
	cd ..

lib: 
	@echo Building RDF Codec libraries
	cd $(CLSDIR); \
	rm -f $(LIBDIR)/$(LIBNAME); \
	$(AR) $(ARFLAGS) $(LIBDIR)/$(LIBNAME) *; \
	cd ..

examples:  $(CLSDIR)
	$(JC) $(EXAMPLEJFLAGS) $(EXAMPLESOURCES)
	@echo Example built.

dist:
	cd ../..; \
	$(AR) $(ARFLAGS) RDFCodecAddon.zip add-ons/RDFCodec

batch:
	rm -f $(BATCH_MAKE) $(BATCH_LIB) $(BATCH_CLEAN) $(BATCH_DIST) $(BATCH_EXAMPLES)
	echo '@REM ===============================================================' > $(BATCH_MAKE)
	echo '@REM =           Generated by JADE Makefile. DO NOT EDIT           =' >> $(BATCH_MAKE)
	echo '@REM ===============================================================' >> $(BATCH_MAKE)
	echo >> $(BATCH_MAKE)
	echo 'cd src' >> $(BATCH_MAKE)
	echo >> $(BATCH_MAKE)
	echo '$(JC) $(subst :,;,$(subst /,\,$(JFLAGS))) $(subst /,\,$(SOURCES))' >> $(BATCH_MAKE)
	echo >> $(BATCH_MAKE)
	echo 'cd ..' >> $(BATCH_MAKE)	
	echo '@REM ===============================================================' >  $(BATCH_EXAMPLES)
	echo '@REM =           Generated by JADE Makefile. DO NOT EDIT           =' >> $(BATCH_EXAMPLES)
	echo '@REM ===============================================================' >> $(BATCH_EXAMPLES)
	echo >> $(BATCH_EXAMPLES)
	echo '$(JC) $(subst :,;,$(subst /,\,$(EXAMPLEJFLAGS))) $(subst /,\,$(EXAMPLESOURCES))' >> $(BATCH_EXAMPLES)
	echo '@REM ===============================================================' > $(BATCH_LIB)
	echo '@REM =           Generated by JADE Makefile. DO NOT EDIT           =' >> $(BATCH_LIB)
	echo '@REM ===============================================================' >> $(BATCH_LIB)
	echo >> $(BATCH_LIB)
	echo 'cd $(subst /,\,$(CLSDIR))' >> $(BATCH_LIB)
	echo '$(AR) $(ARFLAGS) $(LIBDIR)/$(LIBNAME) *' >> $(BATCH_LIB)
	echo 'cd ..' >> $(BATCH_LIB)
	echo '@REM ===============================================================' > $(BATCH_CLEAN)
	echo '@REM =           Generated by JADE Makefile. DO NOT EDIT           =' >> $(BATCH_CLEAN)
	echo '@REM ===============================================================' >> $(BATCH_CLEAN)
	echo >> $(BATCH_CLEAN)
	echo 'del $(subst /,\,lib/$(LIBNAME))' >> $(BATCH_CLEAN)
	echo 'rmdir /S /Q $(subst /,\,$(CLSDIR))\it' >> $(BATCH_CLEAN) # For Win NT 4/Windows 2000
	echo 'deltree /Y $(subst /,\,$(CLSDIR))\it' >> $(BATCH_CLEAN) #for Win 95/98
	echo 'rmdir /S /Q $(subst /,\,$(CLSDIR))\examples' >> $(BATCH_CLEAN) # For Win NT 4/Windows 2000
	echo 'deltree /Y $(subst /,\,$(CLSDIR))\examples' >> $(BATCH_CLEAN) #for Win 95/98
	echo '@REM ===============================================================' > $(BATCH_DIST)
	echo '@REM =           Generated by JADE Makefile. DO NOT EDIT           =' >> $(BATCH_DIST)
	echo '@REM ===============================================================' >> $(BATCH_DIST)
	echo 'call $(subst /,\,$(BATCH_MAKE))' >> $(BATCH_DIST)
	echo 'call $(subst /,\,$(BATCH_LIB))' >> $(BATCH_DIST)
	echo 'cd ..\..' >> $(BATCH_DIST)
	echo  '$(AR) $(ARFLAGS) RDFCodecAddon.zip add-ons/RDFCodec' >> $(BATCH_DIST)

clean:
	@echo Cleaning up RDF Codec
	cd $(CLSDIR);\
	rm -rf * $(LIBDIR)/$(LIBNAME) `find . -name '*~'` `find . -name '#*#'`


