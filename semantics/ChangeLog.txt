MAJOR CHANGES in JSA 1.2 (26 January 2006)  
==========================================================================

GENERAL IMPROVEMENTS:
- The current JADE Semantics Add-On works on J2SE, PJAVA, .NET environments.
  A support for the MIDP environment is planned in future versions, in order to
  run Semantic Agents on mobile phones.
  To compile the framework for a given environment, specify the environment
  name in the ant command line (example: ant pjava lib).
- Moreover, the JSA framework can now be compiled from Java SDK 1.4 (and not
  necessarily Java SDK 1.5)
- Fixed bug on OntoActionBehaviour. When an exception was raised during the perform 
  method execution of this behaviour, the agent died. Now, the exception is catched
  and the behaviour state is set to execution_failure.
- In the class SemanticInterpreterBehaviour, set the visibility of the
  receiveNextMessage method to public.
- Multiple receivers of received messages taken into account.

INTERPRETER:
- Added a SIP EqualsIRE which manages the equality between an Identify Expression 
  and a formula.
- Better architecture between SIPs and KBase assert filters. 

SL HANDLING:
- Added a class ListOfMatchResults.
- Added a new referential operator: some (this is an extension to the FIPA-SL
  grammar: (some ?x (p ?X)) returns a set of terms satisfying the p predicate,
  whereas (all ?x (p ?x)) returns the set of exactly all terms satisfying p).
- Revised simplification of B-Forall formulas.
- Byte encoding/decoding correction (added Base64 class).
- Improved the matching function in ordre to match AndNode and OrNode as unordered
  lists of formula (e.g. (or p q) matches (or q p)). This is particulary useful
  when matching a pattern of formula, where the order of non instantiated meta-
  references is not known in advance.
- In the same way, improved the matching function so that the "=" SL predicate is
  considered as commutative (i.e. (= a b) and (= b a) match).
- Added Util class, which contains utility methods.

BELIEF BASE:
- The belief base handles the closure information conveyed by the identifying
  referential expressions "all" and "iota". For example:
  * (iota ?x (p ?x)) refers to the ONLY ?x which makes (p ?x) true.
  * (any ?x (p ?x)) refers to one ?x which makes (p ?x) true.
  After asserting the formula (= (iota ?x (p ?x)) 1), the answer to the query on 
  (= (iota ?x (p ?x)) 1) is true, because the belief base as interpreted the iota
  operator as meaning 1 is the only possible value for predicate p.
  However, after asserting simply the formula (p 1), the answer to the query on
  (= (iota ?x (p ?x)) 1) is null, because the belief base has no element to consider
  1 as the only possible value for p (in this case, a query on (= (any ?x (p ?x)) 1)
  still returns true, of course)
- Automatic handling of "B" operators in the assertFormula and the query methods for
  more convenience (e.g. asserting or querying for "(p 1)" is equivalent to asserting
  or querying "(B agent (p 1)"). 
- Optimized the query operation: when the belief base is updated, observers are
  called only if they are concerned by this update.
- Forall and Exists operators are taken into account.
- The (not (B agent ??formula)) pattern is taken into account by the assertFormula
  method to remove formulas from the base (this makes the removeAllFormulae deprecated).
- Added a retractFormula to the KBase interface. A call to retractFormula with the F
  formula is equivalent to a call to assertFormula with (not (B agent F)). This makes
  the removeFormula deprecated.
- The result to a query is now the list of MatchResult that are solutions to the query
  (added QueryResult class). This makes it possible to query formulas including meta-
  refences (e.g. query on (p ??X) returns the list of all bindings for ??X satisfying
  the predicate p).
- Removed queryRef filters (queryRef filters become query filters using meta-references,
  see the previous point).

PLANNER: 
- Modified the planner interface

OTHER:
-The following classes do not exist any more:
  kbase.Bind
  kbase.Bindings
  kbase.BindingsImpl
  kbase.filter.KBQueryRefFilter
The following package do not exist any more:
  kbase.filter.queryRef